name: Test Check RETCODE Action

on:
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Tipo de prueba a ejecutar'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - valid_cases
          - invalid_cases
          - edge_cases

  push:
    branches:
      - "feature/check-retcode"

jobs:
  # Job para probar casos inválidos
  test-invalid-configurations:
    name: "❌ Pruebas de Configuraciones Inválidas"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test_case:
          - name: "JSON vacío"
            json: "{}"
          - name: "Sin array codes"
            json: '{"fallback": {"status": "critical", "title": "Error", "message": "Error", "should_fail": true}}'
          - name: "Array codes vacío"
            json: '{"codes": [], "fallback": {"status": "critical", "title": "Error", "message": "Error", "should_fail": true}}'
          - name: "Sin fallback"
            json: '{"codes": [{"range": "0", "status": "success", "title": "OK", "message": "OK", "should_fail": false}]}'
          - name: "Código sin campo obligatorio"
            json: '{"codes": [{"range": "0", "status": "success", "title": "OK"}], "fallback": {"status": "critical", "title": "Error", "message": "Error", "should_fail": true}}'
          - name: "Fallback sin campo obligatorio"
            json: '{"codes": [{"range": "0", "status": "success", "title": "OK", "message": "OK", "should_fail": false}], "fallback": {"status": "critical", "title": "Error"}}'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: "Crear JSON inválido: ${{ matrix.test_case.name }}"
        run: |
          echo '${{ matrix.test_case.json }}' > codes.json
          echo "JSON creado:"
          cat codes.json

      - name: "Probar configuración inválida: ${{ matrix.test_case.name }}"
        id: test
        uses: ./.github/actions/check-retcode
        with:
          retcode: "0"
          config_file: codes.json
        continue-on-error: true

      - name: Validar que falló correctamente
        run: |
          echo "=== Validando fallo esperado ==="
          echo "Caso: ${{ matrix.test_case.name }}"
          echo "Exit code del step: ${{ steps.test.outcome }}"
          
          if [[ "${{ steps.test.outcome }}" != "failure" ]]; then
            echo "❌ ERROR: Se esperaba que fallara pero no falló"
            echo "Status: ${{ steps.test.outputs.status }}"
            echo "Message: ${{ steps.test.outputs.message }}"
            exit 1
          fi
          
          echo "✅ Falló correctamente como se esperaba"